/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bascula;

import Conexion.DBConnection;
import static Conexion.DBConnection.getConnection;
import giovynet.nativelink.SerialPort;
import giovynet.serial.Baud;
import giovynet.serial.Com;
import giovynet.serial.Parameters;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Isi
 */
public class Entradas extends javax.swing.JFrame {

    /**
     * Creates new form entradas
     */
    public Entradas() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Entradas");
    }

    public static int cliente_ok = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jT_fecha = new javax.swing.JTextField();
        jT_id_recepcion = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jT_peso_bruto = new javax.swing.JTextField();
        jT_peso_tara = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jT_Peso_Neto = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jT_transportadora_chapa = new javax.swing.JTextField();
        jT_chofer_ci = new javax.swing.JTextField();
        jT_Camion = new javax.swing.JTextField();
        jT_Chofer_Nombre = new javax.swing.JTextField();
        jT_Transportadora_Marca_Modelo = new javax.swing.JTextField();
        jT_Camion_Marca_Modelo = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jT_cliente_nombre = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jT_Cliente_Ci = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Recepción de Granos");

        jLabel6.setText("Numero Interno:");

        jLabel7.setText("Fecha:");

        jT_fecha.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jT_id_recepcion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jT_id_recepcion.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jT_id_recepcionInputMethodTextChanged(evt);
            }
        });

        jButton2.setText("Imprimir Comprobante");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Comprobante de Pesaje:");

        jLabel10.setText("Peso Bruto:");

        jLabel11.setText("Neto:");

        jTextField4.setEditable(false);

        jT_peso_bruto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jT_peso_brutoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jT_peso_brutoKeyReleased(evt);
            }
        });

        jT_peso_tara.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jT_peso_taraKeyReleased(evt);
            }
        });

        jButton3.setText("Obtener Peso Bruto");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jT_Peso_Neto.setEditable(false);

        jLabel14.setText("Tara:");

        jButton7.setText("Obtener Peso Tara");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jT_Peso_Neto, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jT_peso_bruto, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jT_peso_tara, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_peso_bruto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jButton3))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_peso_tara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_Peso_Neto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        jLabel3.setDisplayedMnemonic('a');
        jLabel3.setText("Camión Matrícula:");

        jLabel4.setDisplayedMnemonic('t');
        jLabel4.setText("Transportadora Matrícula:");

        jLabel5.setDisplayedMnemonic('h');
        jLabel5.setText("Chofer CI:");

        jT_transportadora_chapa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jT_transportadora_chapaKeyReleased(evt);
            }
        });

        jT_chofer_ci.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jT_chofer_ciKeyReleased(evt);
            }
        });

        jT_Camion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jT_CamionKeyReleased(evt);
            }
        });

        jT_Chofer_Nombre.setEditable(false);

        jT_Transportadora_Marca_Modelo.setEditable(false);

        jT_Camion_Marca_Modelo.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(75, 75, 75)
                            .addComponent(jLabel5)))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jT_Camion, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jT_Camion_Marca_Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jT_chofer_ci)
                            .addComponent(jT_transportadora_chapa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jT_Chofer_Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                            .addComponent(jT_Transportadora_Marca_Modelo))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_Camion_Marca_Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jT_Camion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jT_transportadora_chapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jT_Transportadora_Marca_Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_chofer_ci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jT_Chofer_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jT_cliente_nombre.setEditable(false);
        jT_cliente_nombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel13.setDisplayedMnemonic('c');
        jLabel13.setText("Cliente RUC:");

        jT_Cliente_Ci.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jT_Cliente_CiKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jT_Cliente_Ci, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jT_cliente_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_cliente_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jT_Cliente_Ci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton8.setText("<");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText(">");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jT_id_recepcion, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jT_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jT_id_recepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jT_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton9)
                        .addComponent(jButton8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Nuevo");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Buscar");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Clientes");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Choferes");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            SerialPort serialPort = new SerialPort();
            List<String> lstFreeSerialPort = serialPort.getFreeSerialPort();//Gets a list of serial ports free

            Parameters parameters = new Parameters();//Create a parameter object
            parameters.setPort(lstFreeSerialPort.get(0));//assigns the first port found
            parameters.setBaudRate(Baud._4800);//assigns baud rate
            parameters.setByteSize("8");// assigns byte size
            parameters.setParity("N");// assigns parity
            Com com = new Com(parameters);// With the "parameters" creates a "Com"

            int ok = 0;
            int dataReceived = 0;
            for (int i = 0; i < 20; i++) {//Send and receive data every 800 milliseconds
                dataReceived = com.receiveSingleCharAsInteger();
                if (dataReceived > 0) {
                    if (ok == 0) {
//                        System.out.println("...Data received: " + dataReceived);
                        jT_peso_bruto.setText(String.valueOf(dataReceived));
                        ok = 1;
                    }
                }
            }
            if (dataReceived == 0) {
                JOptionPane.showMessageDialog(this, "Problemas de conexion con la báscula");
            }

            com.close();

        } catch (Exception ex) {
            System.err.println(ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        int max = DBConnection.RecepcionMax();

        String max_str = (String) String.valueOf(max);

        String fecha = DBConnection.Obtener_Fecha();
        jT_id_recepcion.setText(max_str);
        jT_fecha.setText(fecha);
        jT_Cliente_Ci.requestFocus();
        RecepcionUpdate(Integer.parseInt(max_str));

    }//GEN-LAST:event_formWindowOpened

    private void jT_CamionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jT_CamionKeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER)) {
            Camion_Buscar();
        }
    }//GEN-LAST:event_jT_CamionKeyReleased

    private void jT_chofer_ciKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jT_chofer_ciKeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER)) {
            Chofer_Buscar();
        }
    }//GEN-LAST:event_jT_chofer_ciKeyReleased

    private void jT_transportadora_chapaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jT_transportadora_chapaKeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER)) {
            Transportadora_Buscar();
        }
    }//GEN-LAST:event_jT_transportadora_chapaKeyReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jT_Cliente_CiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jT_Cliente_CiKeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER)) {
            int encontro = Cliente_Buscar();
            if (encontro == 0) {
                JOptionPane.showMessageDialog(this, "Cliente no registrado");
                jT_cliente_nombre.setText("");
            }
        }
    }//GEN-LAST:event_jT_Cliente_CiKeyReleased

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            SerialPort serialPort = new SerialPort();
            List<String> lstFreeSerialPort = serialPort.getFreeSerialPort();//Gets a list of serial ports free

            Parameters parameters = new Parameters();//Create a parameter object
            parameters.setPort(lstFreeSerialPort.get(0));//assigns the first port found
            parameters.setBaudRate(Baud._4800);//assigns baud rate
            parameters.setByteSize("8");// assigns byte size
            parameters.setParity("N");// assigns parity
            Com com = new Com(parameters);// With the "parameters" creates a "Com"

            int ok = 0;
            int dataReceived = 0;
            for (int i = 0; i < 20; i++) {//Send and receive data every 800 milliseconds
                dataReceived = com.receiveSingleCharAsInteger();
                if (dataReceived > 0) {
                    if (ok == 0) {
//                        System.out.println("...Data received: " + dataReceived);
                        jT_peso_bruto.setText(String.valueOf(dataReceived));
                        ok = 1;
                    }
                }
            }
            if (dataReceived == 0) {
                JOptionPane.showMessageDialog(this, "Problemas de conexion con la báscula");
            }

            com.close();

        } catch (Exception ex) {
            System.err.println(ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    public static String ClienteCI_Q_id(int id) {
        String ci = "";
        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM cliente where id_cliente = '" + (id) + "' ");
            if (RS.next()) {
                ci = RS.getString("ruc").trim();
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return ci;
    }

    public static String ClienteNombre_Q_id(int id) {
        String ci = "";
        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM cliente where id_cliente = '" + (id) + "' ");
            if (RS.next()) {
                ci = RS.getString("nombre").trim();
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return ci;
    }

    public static String CamionMarcaModelo_Q_id(int id) {
        String ci = "";
        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM camion where id_camion = '" + (id) + "' ");
            if (RS.next()) {
                String modelo = "";
                if (RS.getString("modelo") != null) {
                    modelo = RS.getString("modelo").trim();
                }

                ci = RS.getString("marca").trim() + " / " + modelo;
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return ci;
    }

    public static String TransportadoraMarca_Q_id(int id) {
        String ci = "";
        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM carreta where id_carreta = '" + (id) + "' ");
            if (RS.next()) {
                String modelo = "";
                if (RS.getString("modelo") != null) {
                    modelo = RS.getString("modelo").trim();
                }

                ci = RS.getString("marca").trim() + " / " + modelo;
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return ci;
    }

    public static String Chofer_CI_Q_id(int id) {
        String ci = "";
        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM chofer where id_chofer = '" + (id) + "' ");
            if (RS.next()) {
                ci = RS.getString("ci").trim();
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return ci;
    }

    public static String Chofer_Nombre_Q_id(int id) {
        String ci = "";
        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM chofer where id_chofer = '" + (id) + "' ");
            if (RS.next()) {
                ci = RS.getString("nombre").trim();
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return ci;
    }

    public static String TransportadoraChapa_Q_id(int id) {
        String ci = "";
        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM carreta where id_carreta = '" + (id) + "' ");
            if (RS.next()) {

                ci = RS.getString("chapa").trim();
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return ci;
    }

    public static String CamionChapa_Q_id(int id) {
        String ci = "";
        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM camion where id_camion = '" + (id) + "' ");
            if (RS.next()) {
                if (RS.getString("chapa") != null) {
                    ci = RS.getString("chapa").trim();
                }

            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return ci;
    }

    public static void RecepcionClear() {
        jT_Cliente_Ci.setText("");
        jT_cliente_nombre.setText("");
        jT_Camion_Marca_Modelo.setText("");
        jT_Camion.setText("");
        jT_Transportadora_Marca_Modelo.setText("");
        jT_transportadora_chapa.setText("");
        jT_chofer_ci.setText("");
        jT_Chofer_Nombre.setText("");
        jT_peso_bruto.setText("");
        jT_peso_tara.setText("");
        jT_Peso_Neto.setText("");
    }

//    public static void RecepcionDetalle() {
//        try (Connection conexion = getConnection()) {
//
//        } catch (SQLException ex) {
//            System.err.println(ex);
//        }
//
//    }
    public static void RecepcionMenos() {

        int id = Integer.parseInt(jT_id_recepcion.getText());
        String id_str = String.valueOf(id - 1);

        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM recepcion where id_recepcion = '" + (id - 1) + "' ");
            if (RS.next()) {

                jT_id_recepcion.setText(RS.getString("id_recepcion"));
                jT_fecha.setText(RS.getString("fecha").trim());

                RecepcionClear();

                Statement ST2 = conexion.createStatement();
                ResultSet RS2 = ST2.executeQuery("SELECT * FROM recepcion_detalle where id_recepcion = '" + (id - 1) + "' ");
                if (RS2.next()) {

                    if (RS2.getInt("id_cliente") > 0) {
                        String ci = ClienteCI_Q_id(RS2.getInt("id_cliente"));
                        String nombre = ClienteNombre_Q_id(RS2.getInt("id_cliente"));
                        jT_Cliente_Ci.setText(ci);
                        jT_cliente_nombre.setText(nombre);
                    }

                    if (RS2.getInt("id_camion") > 0) {
                        String camion = CamionMarcaModelo_Q_id(RS2.getInt("id_camion"));
                        String camion_chapa = CamionChapa_Q_id(RS2.getInt("id_camion"));
                        jT_Camion_Marca_Modelo.setText(camion);
                        jT_Camion.setText(camion_chapa);
                    }
                    if (RS2.getInt("id_carreta") > 0) {
                        String trasportadora_chapa = TransportadoraChapa_Q_id(RS2.getInt("id_carreta"));
                        String trasportadora_marca = TransportadoraMarca_Q_id(RS2.getInt("id_carreta"));
                        jT_Transportadora_Marca_Modelo.setText(trasportadora_marca);
                        jT_transportadora_chapa.setText(trasportadora_chapa);
                    }
                    if (RS2.getInt("id_chofer") > 0) {
                        String chofer_ci = Chofer_CI_Q_id(RS2.getInt("id_chofer"));
                        String chofer_nombre = Chofer_Nombre_Q_id(RS2.getInt("id_chofer"));
                        jT_chofer_ci.setText(chofer_ci);
                        jT_Chofer_Nombre.setText(chofer_nombre);
                    }

                }

                jT_peso_bruto.setText(RS.getString("peso_bruto"));
                jT_peso_tara.setText(RS.getString("peso_tara"));
                jT_Peso_Neto.setText(RS.getString("peso_neto"));

            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }

    }
//    public static void RecepcionMenos() {
//
//        int id = Integer.parseInt(jT_id_recepcion.getText());
//        String id_str = String.valueOf(id - 1);
//
//        try (Connection conexion = getConnection()) {
//            Statement ST = conexion.createStatement();
//            ResultSet RS = ST.executeQuery("SELECT * FROM recepcion_detalle where id_recepcion = '" + (id - 1) + "' ");
//            if (RS.next()) {
//
//                String ci = ClienteCI_Q_id(RS.getInt("id_cliente"));
//                String nombre = ClienteNombre_Q_id(RS.getInt("id_cliente"));
//                String camion = CamionMarcaModelo_Q_id(RS.getInt("id_camion"));
//                String camion_chapa = CamionChapa_Q_id(RS.getInt("id_camion"));
//                String trasportadora_chapa = TransportadoraChapa_Q_id(RS.getInt("id_carreta"));
//                String trasportadora_marca = TransportadoraMarca_Q_id(RS.getInt("id_carreta"));
//                String chofer_ci = Chofer_CI_Q_id(RS.getInt("id_chofer"));
//                String chofer_nombre = Chofer_Nombre_Q_id(RS.getInt("id_chofer"));
//
//                jT_Cliente_Ci.setText(ci);
//                jT_cliente_nombre.setText(nombre);
//                jT_id_recepcion.setText(id_str);
//                jT_fecha.setText(RS.getString("fecha"));
//                jT_Camion_Marca_Modelo.setText(camion);
//                jT_Camion.setText(camion_chapa);
//                jT_Transportadora_Marca_Modelo.setText(trasportadora_marca);
//                jT_transportadora_chapa.setText(trasportadora_chapa);
//                jT_chofer_ci.setText(chofer_ci);
//                jT_Chofer_Nombre.setText(chofer_nombre);
//
//            }
//        } catch (SQLException ex) {
//            System.err.println(ex);
//        }
//
//    }

    public static void RecepcionMas() {
        int id = Integer.parseInt(jT_id_recepcion.getText());
        try (Connection conexion = getConnection()) {

            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM recepcion where id_recepcion = '" + (id + 1) + "' ");
            if (RS.next()) {

                jT_id_recepcion.setText(RS.getString("id_recepcion"));
                jT_fecha.setText(RS.getString("fecha").trim());

                RecepcionClear();

                Statement ST2 = conexion.createStatement();
                ResultSet RS2 = ST2.executeQuery("SELECT * FROM recepcion_detalle where id_recepcion = '" + (id + 1) + "' ");
                if (RS2.next()) {

                    if (RS2.getInt("id_cliente") > 0) {
                        String ci = ClienteCI_Q_id(RS2.getInt("id_cliente"));
                        String nombre = ClienteNombre_Q_id(RS2.getInt("id_cliente"));
                        jT_Cliente_Ci.setText(ci);
                        jT_cliente_nombre.setText(nombre);
                    }

                    if (RS2.getInt("id_camion") > 0) {
                        String camion = CamionMarcaModelo_Q_id(RS2.getInt("id_camion"));
                        String camion_chapa = CamionChapa_Q_id(RS2.getInt("id_camion"));
                        jT_Camion_Marca_Modelo.setText(camion);
                        jT_Camion.setText(camion_chapa);

                    }
                    if (RS2.getInt("id_carreta") > 0) {
                        String trasportadora_chapa = TransportadoraChapa_Q_id(RS2.getInt("id_carreta"));
                        String trasportadora_marca = TransportadoraMarca_Q_id(RS2.getInt("id_carreta"));
                        jT_Transportadora_Marca_Modelo.setText(trasportadora_marca);
                        jT_transportadora_chapa.setText(trasportadora_chapa);
                    }
                    if (RS2.getInt("id_chofer") > 0) {
                        String chofer_ci = Chofer_CI_Q_id(RS2.getInt("id_chofer"));
                        String chofer_nombre = Chofer_Nombre_Q_id(RS2.getInt("id_chofer"));
                        jT_chofer_ci.setText(chofer_ci);
                        jT_Chofer_Nombre.setText(chofer_nombre);
                    }
                    jT_peso_bruto.setText(RS.getString("peso_bruto"));
                    jT_peso_tara.setText(RS.getString("peso_tara"));
                    jT_Peso_Neto.setText(RS.getString("peso_neto"));

                }
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }

    }

    public static void RecepcionUpdate(int id) {

        try (Connection conexion = getConnection()) {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery("SELECT * FROM recepcion where id_recepcion = '" + (id) + "' ");
            if (RS.next()) {
                jT_id_recepcion.setText(RS.getString("id_recepcion"));
                jT_fecha.setText(RS.getString("fecha").trim());

                RecepcionClear();

                Statement ST2 = conexion.createStatement();
                ResultSet RS2 = ST2.executeQuery("SELECT * FROM recepcion_detalle where id_recepcion = '" + (id) + "' ");
                if (RS2.next()) {

                    if (RS2.getInt("id_cliente") > 0) {
                        String ci = ClienteCI_Q_id(RS2.getInt("id_cliente"));
                        String nombre = ClienteNombre_Q_id(RS2.getInt("id_cliente"));
                        jT_Cliente_Ci.setText(ci);
                        jT_cliente_nombre.setText(nombre);
                    }

                    if (RS2.getInt("id_camion") > 0) {
                        String camion = CamionMarcaModelo_Q_id(RS2.getInt("id_camion"));
                        String camion_chapa = CamionChapa_Q_id(RS2.getInt("id_camion"));
                        jT_Camion_Marca_Modelo.setText(camion);
                        jT_Camion.setText(camion_chapa);
                    }
                    if (RS2.getInt("id_carreta") > 0) {
                        String trasportadora_chapa = TransportadoraChapa_Q_id(RS2.getInt("id_carreta"));
                        String trasportadora_marca = TransportadoraMarca_Q_id(RS2.getInt("id_carreta"));
                        jT_Transportadora_Marca_Modelo.setText(trasportadora_marca);
                        jT_transportadora_chapa.setText(trasportadora_chapa);
                    }
                    if (RS2.getInt("id_chofer") > 0) {
                        String chofer_ci = Chofer_CI_Q_id(RS2.getInt("id_chofer"));
                        String chofer_nombre = Chofer_Nombre_Q_id(RS2.getInt("id_chofer"));
                        jT_chofer_ci.setText(chofer_ci);
                        jT_Chofer_Nombre.setText(chofer_nombre);
                    }

                    jT_peso_bruto.setText(RS.getString("peso_bruto"));
                    jT_peso_tara.setText(RS.getString("peso_tara"));
                    jT_Peso_Neto.setText(RS.getString("peso_neto"));

                }

            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }

    }
//    public static void RecepcionUpdate(int id) {
//
//        String id_str = String.valueOf(id);
//
//        try (Connection conexion = getConnection()) {
//            Statement ST = conexion.createStatement();
//            ResultSet RS = ST.executeQuery("SELECT * FROM recepcion_detalle where id_recepcion = '" + (id) + "' ");
//            if (RS.next()) {
//
//                String ci = ClienteCI_Q_id(RS.getInt("id_cliente"));
//                String nombre = ClienteNombre_Q_id(RS.getInt("id_cliente"));
//                String camion = CamionMarcaModelo_Q_id(RS.getInt("id_camion"));
//                String camion_chapa = CamionChapa_Q_id(RS.getInt("id_camion"));
//                String trasportadora_chapa = TransportadoraChapa_Q_id(RS.getInt("id_carreta"));
//                String trasportadora_marca = TransportadoraMarca_Q_id(RS.getInt("id_carreta"));
//                String chofer_ci = Chofer_CI_Q_id(RS.getInt("id_chofer"));
//                String chofer_nombre = Chofer_Nombre_Q_id(RS.getInt("id_chofer"));
//
//                jT_Cliente_Ci.setText(ci);
//                jT_cliente_nombre.setText(nombre);
//                jT_id_recepcion.setText(id_str);
//                jT_fecha.setText(RS.getString("fecha"));
//                jT_Camion_Marca_Modelo.setText(camion);
//                jT_Camion.setText(camion_chapa);
//                jT_Transportadora_Marca_Modelo.setText(trasportadora_marca);
//                jT_transportadora_chapa.setText(trasportadora_chapa);
//                jT_chofer_ci.setText(chofer_ci);
//                jT_Chofer_Nombre.setText(chofer_nombre);
//            }
//        } catch (SQLException ex) {
//            System.err.println(ex);
//        }
//
//    }


    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        RecepcionMenos();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        RecepcionMas();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jT_id_recepcionInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jT_id_recepcionInputMethodTextChanged

    }//GEN-LAST:event_jT_id_recepcionInputMethodTextChanged

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked

        int max = DBConnection.RecepcionMax();
        Connection conexion = DBConnection.getConnection();
        String hoy = DBConnection.Obtener_Fecha();
        PreparedStatement stUpdateProducto;

        try {
            stUpdateProducto = conexion.prepareStatement("INSERT INTO recepcion VALUES(?,?,?,?,?,?,?,?,?,?,?)");
            stUpdateProducto.setInt(1, (max + 1));
            stUpdateProducto.setInt(2, (max + 1));
            stUpdateProducto.setString(3, hoy);
            stUpdateProducto.setInt(4, 0);
            stUpdateProducto.setLong(5, 0);
            stUpdateProducto.setInt(6, 0);
            stUpdateProducto.setInt(7, 0);
            stUpdateProducto.setInt(8, 0);
            stUpdateProducto.setInt(9, 0);
            stUpdateProducto.setInt(10, 0);
            stUpdateProducto.setInt(11, 0);

            stUpdateProducto.executeUpdate();

            stUpdateProducto = conexion.prepareStatement("INSERT INTO recepcion_detalle VALUES(?,?,?,?,?,?,?)");
            stUpdateProducto.setInt(1, (max + 1));
            stUpdateProducto.setInt(2, (max + 1));
            stUpdateProducto.setInt(3, 0);
            stUpdateProducto.setInt(4, 0);
            stUpdateProducto.setInt(5, 0);
            stUpdateProducto.setInt(6, 0);
            stUpdateProducto.setInt(7, 0);

            stUpdateProducto.executeUpdate();
            RecepcionUpdate(max + 1);

        } catch (SQLException ex) {
            System.err.println(ex);
        }
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jT_peso_brutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jT_peso_brutoKeyReleased
        try (Connection conexion = getConnection()) {

            long peso_bruto = Integer.parseInt(jT_peso_bruto.getText());
            long peso_tara = Integer.parseInt(jT_peso_tara.getText());
            long peso_neto = peso_bruto - peso_tara;
            String neto = (String) String.valueOf(peso_neto);

            PreparedStatement st = conexion.prepareStatement("UPDATE recepcion SET peso_bruto='" + jT_peso_bruto.getText() + "', peso_tara='" + jT_peso_tara.getText() + "', peso_neto='" + peso_neto + "' WHERE id_recepcion = '" + jT_id_recepcion.getText() + "'");
            st.executeUpdate();

            jT_Peso_Neto.setText(neto);

        } catch (SQLException ex) {
            System.err.println(ex);
        }


    }//GEN-LAST:event_jT_peso_brutoKeyReleased

    private void jT_peso_brutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jT_peso_brutoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jT_peso_brutoKeyPressed

    private void jT_peso_taraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jT_peso_taraKeyReleased
        try (Connection conexion = getConnection()) {

            long peso_bruto = Integer.parseInt(jT_peso_bruto.getText());
            long peso_tara = Integer.parseInt(jT_peso_tara.getText());
            long peso_neto = peso_bruto - peso_tara;
            String neto = (String) String.valueOf(peso_neto);

            PreparedStatement st = conexion.prepareStatement("UPDATE recepcion SET peso_bruto='" + jT_peso_bruto.getText() + "', peso_tara='" + jT_peso_tara.getText() + "', peso_neto='" + peso_neto + "' WHERE id_recepcion = '" + jT_id_recepcion.getText() + "'");
            st.executeUpdate();
            jT_Peso_Neto.setText(neto);
        } catch (SQLException ex) {
            System.err.println(ex);
        }
    }//GEN-LAST:event_jT_peso_taraKeyReleased

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        new Buscar.Camiones().setVisible(true);
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new Buscar.Clientes().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new Buscar.Chofer().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public static String Transportadora_Buscar() {
        String max = "";
        try {
            try (Connection conexion = getConnection()) {
                Statement ST = conexion.createStatement();
                ResultSet RS = ST.executeQuery("SELECT * FROM carreta where chapa = '" + jT_transportadora_chapa.getText() + "' ");
                if (RS.next()) {
                    jT_Transportadora_Marca_Modelo.setText(RS.getString("marca").trim() + " / " + RS.getString("modelo").trim());
                    jT_chofer_ci.requestFocus();

                    PreparedStatement st = conexion.prepareStatement("UPDATE recepcion_detalle SET id_carreta='" + RS.getInt("id_carreta") + "' WHERE id_recepcion_detalle = '" + jT_id_recepcion.getText() + "'");
                    st.executeUpdate();
                }
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return max;
    }

    public static int Cliente_Buscar() {
        int max = 0;

        try {
            try (Connection conexion = getConnection()) {
                Statement ST = conexion.createStatement();
                ResultSet RS = ST.executeQuery("SELECT * FROM cliente where ruc = '" + jT_Cliente_Ci.getText() + "' ");
                if (RS.next()) {
                    jT_cliente_nombre.setText(RS.getString("nombre").trim());
                    cliente_ok = 1;

                    PreparedStatement st = conexion.prepareStatement("UPDATE recepcion_detalle SET id_cliente='" + RS.getInt("id_cliente") + "' WHERE id_recepcion_detalle = '" + jT_id_recepcion.getText() + "'");
                    st.executeUpdate();
                    max = 1;
                }
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }

        return max;
    }

    public static String Camion_Buscar() {
        String max = "";
        try {
            try (Connection conexion = getConnection()) {
                Statement ST = conexion.createStatement();
                ResultSet RS = ST.executeQuery("SELECT * FROM camion where chapa = '" + jT_Camion.getText() + "'");
                if (RS.next()) {
                    jT_Camion_Marca_Modelo.setText(RS.getString("marca").trim() + " / " + RS.getString("modelo").trim());

                    PreparedStatement st = conexion.prepareStatement("UPDATE recepcion_detalle SET id_camion='" + RS.getInt("id_camion") + "' WHERE id_recepcion_detalle = '" + jT_id_recepcion.getText() + "'");
                    st.executeUpdate();

                    jT_transportadora_chapa.requestFocus();
                }
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return max;
    }

    public static String Chofer_Buscar() {
        String max = "";
        try {
            try (Connection conexion = getConnection()) {
                Statement ST = conexion.createStatement();
                ResultSet RS = ST.executeQuery("SELECT * FROM chofer where ci = '" + jT_chofer_ci.getText() + "' ");
                if (RS.next()) {
                    jT_Chofer_Nombre.setText(RS.getString("nombre").trim());
                    PreparedStatement st = conexion.prepareStatement("UPDATE recepcion_detalle SET id_chofer='" + RS.getInt("id_chofer") + "' WHERE id_recepcion_detalle = '" + jT_id_recepcion.getText() + "'");
                    st.executeUpdate();

                }
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        return max;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entradas().setVisible(true);

                try {
                    listaPuertos = puerto.getFreeSerialPort();
                    String recibido = "";
                    String caracter = "";
                    for (String string : listaPuertos) {
                        System.out.println(string);
                    }

                    Parameters settings = new Parameters();
                    settings.setPort("COM1");
                    settings.setBaudRate(Baud._4800);
                    com1 = new Com(settings);
                    while (!caracter.equals("\n")) {
                        caracter = com1.receiveSingleString();
                        recibido += caracter;
                    }
                    System.out.println(recibido);

                } catch (Exception ex) {
                    System.err.println(ex);
                }

            }
        });
    }

    static SerialPort puerto = new SerialPort();
    static List<String> listaPuertos;
    static Com com1;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public static javax.swing.JTextField jT_Camion;
    public static javax.swing.JTextField jT_Camion_Marca_Modelo;
    public static javax.swing.JTextField jT_Chofer_Nombre;
    public static javax.swing.JTextField jT_Cliente_Ci;
    public static javax.swing.JTextField jT_Peso_Neto;
    public static javax.swing.JTextField jT_Transportadora_Marca_Modelo;
    public static javax.swing.JTextField jT_chofer_ci;
    public static javax.swing.JTextField jT_cliente_nombre;
    public static javax.swing.JTextField jT_fecha;
    public static javax.swing.JTextField jT_id_recepcion;
    public static javax.swing.JTextField jT_peso_bruto;
    public static javax.swing.JTextField jT_peso_tara;
    public static javax.swing.JTextField jT_transportadora_chapa;
    public static javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
